# **Proyek Analisis Data: Bike-sharing Dataset**
- **Nama:** Indri Syafitri
- **Email:** indrisyafitri78@gmail.com
- **ID Dicoding:** indri_syafitri
## **Menentukan Pertanyaan Bisnis**
- Pertanyaan 1 : Adakah peningkatan jumlah penyewaan sepeda saat musim semi dibandingkan dengan musim-musim lainnya untuk sewa harian berdasarkan jam?
- Pertanyaan 2 : adakah pola berdasarkan bulan dan jam dalam jumlah sewa sepeda harian?
## **Import Semua Packages/Library yang Digunakan**
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
## **Data Wrangling**
### **Gathering Data**
day_df = pd.read_csv("day.csv", delimiter=",")
day_df.head()
hour_df = pd.read_csv("hour.csv", delimiter=",")
hour_df.head()
### **Assessing Data**
day_df.info()
hour_df.info()
day_df.isna().sum()
hour_df.isna().sum()
day_df.nunique()
hour_df.nunique()
day_df.duplicated().sum()
hour_df.duplicated().sum()
### **Cleaning Data**
day_df.isna().sum()
hour_df.isna().sum()
**Insight:**
- pada data tidak ada missing values dan data duplikat
- selanjutnya, mengubah angka angka yang ada serta keterangan pada tabel agar mudah dibaca
hour_df.rename(columns={'dteday':'date','yr':'year', 'mnth':'month', 'hr':'hour', 'weathersit':'weather', 'casual':'casual_user', 'registered':'registered_user', 'hum':'humidity', 'cnt':'count', 'atemp':'apparent_temp'}, inplace=True)

hour_df.columns
hour_df.loc[hour_df['holiday'] == 0, 'holiday'] = 'No'
hour_df.loc[hour_df['holiday'] == 1, 'holiday'] = 'Yes'
hour_df.loc[hour_df['season'] == 1, 'season'] = 'Winter'
hour_df.loc[hour_df['season'] == 2, 'season'] = 'Spring'
hour_df.loc[hour_df['season'] == 3, 'season'] = 'Summer'
hour_df.loc[hour_df['season'] == 4, 'season'] = 'Fall'
hour_df.loc[hour_df['workingday'] == 0, 'workingday'] = 'No'
hour_df.loc[hour_df['workingday'] == 1, 'workingday'] = 'Yes'
hour_df.loc[hour_df['weekday'] == 0, 'weekday'] = 'Monday'
hour_df.loc[hour_df['weekday'] == 1, 'weekday'] = 'Tuesday'
hour_df.loc[hour_df['weekday'] == 2, 'weekday'] = 'Wednesday'
hour_df.loc[hour_df['weekday'] == 3, 'weekday'] = 'Thursday'
hour_df.loc[hour_df['weekday'] == 4, 'weekday'] = 'Friday'
hour_df.loc[hour_df['weekday'] == 5, 'weekday'] = 'Saturday'
hour_df.loc[hour_df['weekday'] == 6, 'weekday'] = 'Sunday'
hour_df.loc[hour_df['month'] == 1, 'month'] = 'January'
hour_df.loc[hour_df['month'] == 2, 'month'] = 'February'
hour_df.loc[hour_df['month'] == 3, 'month'] = 'March'
hour_df.loc[hour_df['month'] == 4, 'month'] = 'April'
hour_df.loc[hour_df['month'] == 5, 'month'] = 'May'
hour_df.loc[hour_df['month'] == 6, 'month'] = 'June'
hour_df.loc[hour_df['month'] == 7, 'month'] = 'July'
hour_df.loc[hour_df['month'] == 8, 'month'] = 'August'
hour_df.loc[hour_df['month'] == 9, 'month'] = 'September'
hour_df.loc[hour_df['month'] == 10, 'month'] = 'October'
hour_df.loc[hour_df['month'] == 11, 'month'] = 'November'
hour_df.loc[hour_df['month'] == 12, 'month'] = 'December'

hour_df.loc[hour_df['year'] == 0, 'year'] = '2011'
hour_df.loc[hour_df['year'] == 1, 'year'] = '2012'
hour_df.loc[hour_df['weather'] == 1, 'weather'] = 'Clear'
hour_df.loc[hour_df['weather'] == 2, 'weather'] = 'Mist-Cloudy'
hour_df.loc[hour_df['weather'] == 3, 'weather'] = 'Light-Rain'
hour_df.loc[hour_df['weather'] == 4, 'weather'] = 'Heavy-Rain'
t_min = -8
t_max = 39
hour_df['date'] = pd.to_datetime(hour_df['date'])
hour_df.dtypes
hour_df.head()
hour_df.to_csv("hour.csv", index=False)
## Exploratory Data Analysis (EDA)
### Explore Hour dataset
demografi penyewa berdasarkan musim
hour_df.groupby(by='season').agg({
    'casual_user': 'mean',
    'registered_user': 'mean',
    'count': ['max', 'min', 'mean']
})
demografi penyewa berdasarkan bulan
hour_df.groupby(by='month').agg({
    'count': ['max', 'min', 'mean', 'sum']
})
demografi penyewa berdasarkan jam
hour_df.groupby(by='hour').agg({
    'count': ['max', 'min', 'mean', 'sum']
})
demografi penyewa berdasarkan cuaca
hour_df.groupby(by='weather').agg({
    'count': ['max', 'min', 'mean', 'sum']
})
demografi penyewa berdasarkan holiday
hour_df.groupby(by='holiday').agg({
    'count': ['max', 'min', 'mean', 'sum']
})
perbandingan penyewa saat weekday dan weekend
hour_df.groupby(by='weekday').agg({
    'count':['max','min','mean']
})
Demografi penyewa berdasarkan workingday
hour_df.groupby(by='workingday').agg({
    'count': ['max', 'min', 'mean']
})
Demografi temp, apparent_temp, humidity berdasarkan season
hour_df.groupby(by='season').agg({
    'temp': ['max', 'min', 'mean'],
    'apparent_temp': ['max', 'min', 'mean'],
    'humidity': ['max', 'min', 'mean']
})
## Visualization & Explanatory Analysis
membuat heatmap untuk memvisualisasikan matriks korelasi kolom numerik dalam DataFrame 'hour_df'.
fig, ax = plt.subplots(figsize=(10, 5))
correlation_matrix = hour_df.corr(numeric_only=True)
mask = np.triu(np.ones_like(correlation_matrix, dtype=bool))

sns.heatmap(
    correlation_matrix,
    annot=True,
    mask=mask,
    cmap="inferno",
    center=0,
    fmt=".2f",
)
ax.set_title("Correlation Heatmap")
plt.show()
### Pertanyaan 1:
Adakah peningkatan jumlah penyewaan sepeda saat musim semi dibandingkan dengan musim-musim lainnya untuk sewa harian berdasarkan jam?
season_df = hour_df.groupby('season')['count'].mean()
season_names = ['Spring', 'Summer', 'Fall', 'Winter']
plt.bar(season_names, season_df)
plt.xlabel('Musim')
plt.ylabel('Rata-rata Jumlah Sewa Berdasarkan Jam')
plt.title('Dampak Tiap Musim Terhadap Jumlah Penyewaan Sepeda Berdasarkan jam')
plt.show()
**Insight:**
- Dapat dilihat bahwa ada peningkatan penyewaan dari musim spring/semi yaitu pada musim summer/panas dan terus meningkat pada musim fall/gugur.
### Pertanyaan 2:
adakah pola berdasarkan bulan dan jam dalam jumlah sewa sepeda harian?
sns.set_style("whitegrid")
plt.figure(figsize=(12, 6))
sns.lineplot(x="hour", y="count", data=hour_df, ci=None)
plt.title("Pola Jumlah Sewa Sepeda Harian Berdasarkan Jam")
plt.xlabel("Jam")
plt.ylabel("Jumlah Sewa Sepeda Harian")
plt.show()
**Insight :**
- dapat dilihat bahwa jumlah sewa sepeda meningkat sekitar jam 8 pagi dan sekitar jam 5 atau 6 sore
## Conclusion
- Conclution pertanyaan 1 :Dapat dilihat dari diagram batang yang ditampilkan, musim dengan jumlah penyewa sepeda paling banyak adalah musim gugur dan musim dengan jumlah penyewa paling sedikit adalah musim salju. Musim Panas berada pada urutan kedua terbanyak penyewa. Kesimpulannya, pada musim panas mengalami peningkatan penyewaan namun, jika dibandingkan dengan musim gugur, musim gugur menjadi urutan terbanyak dan diikuti musim panas di urutan kedua.

- Conclution pertanyaan 2 :  Berdasarkan line plot yang ditampilkan, dapat ditarik kesimpulan bahwa ada pola jam ketika penyewa sepeda meningkat, yaitu sekitar di jam 8 pagi dan sekitar jam 5 atau 6 sore
